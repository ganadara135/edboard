type Mutation {
  insertYear(
    edboardName: String!,             # EDBoard.name
    yeargoals: YearGoalInput,
  ): ErrorReponse,

  insertMonth(
    month: Int!,
    goal: Int!,
    yearName: Int!,
    description: String,
  ): [ErrorReponse]
}

type ErrorReponse {
  path: String
  message: String
}

input YearGoalInput {
  year: Int
  goal: Int,
  description: String
}

type YearGoal {
  id: ID!,
  year: Int!
  goal: Int!,
  description: String,
  ymmns: [YearToMonthMN],
  edboard: EDBoard
}

type YearToMonthMN {
  ygid: YearGoal,
  mgid: MonthGoal,
  description: String,
}

type MonthGoal {
  id: ID!,
  month: Int!,
  goal: Int!,
  description: String,
  ymmns: [YearToMonthMN!]
}

type EDBoard {
  id: ID!,
  name: String,
  description: String,
  yeargoals: [YearGoal],
}

type Query {
  edboardQuery: [EDBoard],
  yearGoalQuery: [YearGoal],
  monthGoalQuery: [MonthGoal],
}