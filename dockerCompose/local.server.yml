version: "3"
services:
    redis:
        container_name: redis
        image: "redis"
        networks:
            - net-abb
        ports:
            - 6379:6379
        
    rdb:
        container_name: rdb
        image: mariadb:10.5
        # image: mysql:8.0.20
        volumes:
            - rdb-data:/var/lib/mysql
        networks:
            - net-abb
        ports:
            - 3306:3306
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${TYPEORM_USERNAME}
            - MYSQL_PASSWORD=${TYPEORM_PASSWORD}
            - MYSQL_DATABASE=${TYPEORM_DATABASE}
            - TZ=Asia/Seoul
        # command: mysqld --init-connect=SET NAMES UTF8; --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci 
        command: ["mysqld", "--init-connect=SET NAMES UTF8mb4;", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
        # command: --default-authentication-plugin=mysql_native_password
        # image: "postgres:9.6"
        # volumes:
        #     - rdb-data:/var/lib/postgresql/data
        # networks:
        #     - net-abb
        # environment: 
        #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        #     - POSTGRES_USER=${POSTGRES_USER}
        #     - POSTGRES_DB=${POSTGRES_DB}

    backend:
        container_name: backend
        build: 
            context: ../
            dockerfile: ./dockerCompose/Dockerfile.server.local.compose
            args: 
                - "NODE_ENV=${NODE_ENV}"
        image: kcod/edbackend:latest
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
        networks:
            - net-abb
        environment:
            # - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@rdb:5432/${POSTGRES_DB}
            - REDIS_HOST=redis
            - FRONTEND_HOST=${FRONTEND_HOST}
            - PORT=${SERVER_PORT}
            - NODE_ENV=${NODE_ENV}
            # - WAIT_HOSTS=rdb:5432     # postgres
            - WAIT_HOSTS=rdb:3306       # mysql     # wait program 설정
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=30
            - WAIT_HOSTS_CONNECT_TIMEOUT=30
            
            - MYSQL_USER=${TYPEORM_USERNAME}          # .env 파일과 server 파일의 위치가 달라서 직접 넣어줌()
            - MYSQL_PASSWORD=${TYPEORM_PASSWORD}
            - MYSQL_DATABASE=${TYPEORM_DATABASE}
        depends_on:
            - redis
            - rdb
        volumes:
            - ../:/abb/
        command:
            - /bin/sh
            - -c 
            # - "/wait && exec ls ./packages/server/dist     # 2개 이상은 안됨
            - "/wait && yarn start"                        # 내부에 yarn 설치 안돼있음
            # - "/wait && nodemon --exec ts-node --files=true src/index.ts"
            # - sh -c "/wait "
            # && node ./packages/server/dist/index.js"
    
    # frontend:
    #     container_name: frontend
    #     build: 
    #         context: ../
    #         dockerfile: ./dockerCompose/Dockerfile.web.compose
    #     image: kcod/abbfront:latest
    #     ports:
    #         - "80:80"
    #     networks:
    #         - net-abb
    #     depends_on:
    #         - backend 
    #     volumes:
    #         - ../packages/web/build:/usr/share/nginx/html

volumes:
    rdb-data:
networks:
    net-abb: